{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gracechen/Desktop/oss/oss_car_assignment/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/todos/Todos';\nimport AddTodo from './components/todos/AddTodo';\nimport About from './components/pages/About'; //import axios from 'axios';\n\nimport { v4 as uuid } from 'uuid';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed; //set to opposite when toggled\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      //deletes it on the server and updates api\n      //axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      //.then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));\n      //change out our todos array with a filtered array without the entry to be deleted\n      // ... is spread operator, copies everything already there\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = (model, make, year, price, sellerName, description) => {\n      const newTodo = {\n        id: uuid(),\n        model,\n        make,\n        year,\n        price,\n        sellerName,\n        description,\n        completed: false\n      };\n      /*\n      axios.post('https://localhost:5000/listings', {\n        model,\n        make,\n        year,\n        price,\n        sellerName,\n        description,\n        completed: false\n      })\n        .then((res) => {\n          this.setState({ todos: [...this.state.todos, res.data] })\n          console.log(res.data);\n          console.log(this.state.todos);\n          })\n        */\n      //can't just simply change todos, we have to make a copy with ...\n\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://localhost:5000/hello').then(res => this.setState({\n      todos: res.data\n    }));\n  } // Toggle complete\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n                addTodo: this.addTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Todos, {\n                todos: this.state.todos,\n                markComplete: this.markComplete,\n                delTodo: this.delTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gracechen/Desktop/oss/oss_car_assignment/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Todos","AddTodo","About","v4","uuid","App","state","todos","markComplete","id","setState","map","todo","completed","delTodo","filter","addTodo","model","make","year","price","sellerName","description","newTodo","componentDidMount","axios","get","then","res","data","render","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BW,KAD0B,GAClB;AACNC,MAAAA,KAAK,EAAE;AADD,KADkB;;AAAA,SAW1BC,YAX0B,GAWVC,EAAD,IAAQ;AACrB,WAAKC,QAAL,CAAe;AAACH,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBI,GAAjB,CAAqBC,IAAI,IAAI;AAClD,cAAGA,IAAI,CAACH,EAAL,KAAYA,EAAf,EAAkB;AAChBG,YAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB,CADgB,CACkB;AACnC;;AACD,iBAAOD,IAAP;AACD,SALsB;AAAR,OAAf;AAOD,KAnByB;;AAAA,SAsB1BE,OAtB0B,GAsBfL,EAAD,IAAQ;AAChB;AACA;AACA;AAEA;AACA;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,MAAjB,CAAwBH,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA5C,CAAJ;AAAT,OAAd;AACD,KA9ByB;;AAAA,SAiC1BO,OAjC0B,GAiChB,CAACC,KAAD,EAAQC,IAAR,EAAcC,IAAd,EAAoBC,KAApB,EAA2BC,UAA3B,EAAuCC,WAAvC,KAAuD;AAE/D,YAAMC,OAAO,GAAG;AACdd,QAAAA,EAAE,EAAEL,IAAI,EADM;AAEda,QAAAA,KAFc;AAGdC,QAAAA,IAHc;AAIdC,QAAAA,IAJc;AAKdC,QAAAA,KALc;AAMdC,QAAAA,UANc;AAOdC,QAAAA,WAPc;AAQdT,QAAAA,SAAS,EAAE;AARG,OAAhB;AAUA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI;;AACA,WAAKH,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAf,EAAsBgB,OAAtB;AAAT,OAAd;AACD,KA/DyB;AAAA;;AAK1BC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAACC,GAAN,CAAU,8BAAV,EACCC,IADD,CACMC,GAAG,IAAI,KAAKlB,QAAL,CAAc;AAAEH,MAAAA,KAAK,EAAEqB,GAAG,CAACC;AAAb,KAAd,CADb;AAED,GARyB,CAU1B;;;AAwDAC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,MAAD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAsB,YAAA,MAAM,EAAEC,KAAK,iBACjC,QAAC,KAAD,CAAO,QAAP;AAAA,sCACE,QAAC,OAAD;AAAS,gBAAA,OAAO,EAAE,KAAKf;AAAvB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAE,KAAKV,KAAL,CAAWC,KAAzB;AACM,gBAAA,YAAY,EAAE,KAAKC,YADzB;AAEM,gBAAA,OAAO,EAAE,KAAKM;AAFpB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF,eAUE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,SAAS,EAAEZ;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AArFyB;;AAwF5B,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/todos/Todos';\nimport AddTodo from './components/todos/AddTodo';\nimport About from './components/pages/About';\n//import axios from 'axios';\nimport {v4 as uuid} from 'uuid';\n\nclass App extends Component {\n  state = {\n    todos: [],\n  }\n\n  componentDidMount(){\n    axios.get('https://localhost:5000/hello')\n    .then(res => this.setState({ todos: res.data }))\n  }\n\n  // Toggle complete\n  markComplete = (id) => {\n    this.setState( {todos: this.state.todos.map(todo => {\n      if(todo.id === id){\n        todo.completed = !todo.completed; //set to opposite when toggled\n      }\n      return todo;\n    })\n    });\n  }\n\n  // Delete Todo entry\n  delTodo = (id) => {\n    //deletes it on the server and updates api\n    //axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    //.then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));\n\n    //change out our todos array with a filtered array without the entry to be deleted\n    // ... is spread operator, copies everything already there\n    this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] });\n  }\n  \n  // Add Todo\n  addTodo = (model, make, year, price, sellerName, description) => {\n    \n    const newTodo = {\n      id: uuid(),\n      model,\n      make,\n      year,\n      price,\n      sellerName,\n      description,\n      completed: false\n    }\n    /*\n    axios.post('https://localhost:5000/listings', {\n      model,\n      make,\n      year,\n      price,\n      sellerName,\n      description,\n      completed: false\n    })\n      .then((res) => {\n        this.setState({ todos: [...this.state.todos, res.data] })\n        console.log(res.data);\n        console.log(this.state.todos);\n        })\n      */\n    //can't just simply change todos, we have to make a copy with ...\n    this.setState({ todos: [...this.state.todos, newTodo]})\n  }\n\n  \n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path='/' render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo}/>\n                <Todos todos={this.state.todos} \n                      markComplete={this.markComplete}\n                      delTodo={this.delTodo}/>\n              </React.Fragment>\n            )}/>\n            <Route path=\"/about\" component={About}/>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}