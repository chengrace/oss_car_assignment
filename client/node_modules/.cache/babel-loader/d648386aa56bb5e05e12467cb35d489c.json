{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/gracechen/Desktop/car/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/todos/Todos';\nimport AddTodo from './components/todos/AddTodo';\nimport About from './components/pages/About';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      cars: []\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed; //set to opposite when toggled\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      //deletes it on the server and updates api\n      axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(res => this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })); //change out our todos array with a filtered array without the entry to be deleted\n      // ... is spread operator, copies everything already there\n      //this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] });\n    };\n\n    this.addTodo = (model, make, year, price, sellerName, description) => {\n      /*\n      const newTodo = {\n        id: uuid(),\n        title: title,\n        completed: false\n      }\n      */\n      axios.post('https://jsonplaceholder.typicode.com/todos', {\n        model,\n        make,\n        year,\n        price,\n        sellerName,\n        description,\n        completed: false\n      }).then(res = () => {\n        this.setState({\n          todos: [...this.state.todos, res.data]\n        });\n        console.log(res.data);\n      }); //can't just simply change todos, we have to make a copy with ...\n      //this.setState({ todos: [...this.state.todos, newTodo]})\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({\n      todos: res.data\n    }));\n  } // Toggle complete\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n                addTodo: this.addTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Todos, {\n                todos: this.state.todos,\n                markComplete: this.markComplete,\n                delTodo: this.delTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gracechen/Desktop/car/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Todos","AddTodo","About","axios","App","state","todos","cars","markComplete","id","setState","map","todo","completed","delTodo","delete","then","res","filter","addTodo","model","make","year","price","sellerName","description","post","data","console","log","componentDidMount","get","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Todos from './components/todos/Todos';\nimport AddTodo from './components/todos/AddTodo';\nimport About from './components/pages/About';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = {\n    todos: [],\n    cars: []\n  }\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res => this.setState({ todos: res.data }))\n  }\n\n  // Toggle complete\n  markComplete = (id) => {\n    this.setState( {todos: this.state.todos.map(todo => {\n      if(todo.id === id){\n        todo.completed = !todo.completed; //set to opposite when toggled\n      }\n      return todo;\n    })\n    });\n  }\n\n  // Delete Todo entry\n  delTodo = (id) => {\n    //deletes it on the server and updates api\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res => this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] }));\n\n    //change out our todos array with a filtered array without the entry to be deleted\n    // ... is spread operator, copies everything already there\n    //this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] });\n  }\n  \n  // Add Todo\n  addTodo = (model, make, year, price, sellerName, description) => {\n    /*\n    const newTodo = {\n      id: uuid(),\n      title: title,\n      completed: false\n    }\n    */\n\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      model,\n      make,\n      year,\n      price,\n      sellerName,\n      description,\n      completed: false\n    })\n      .then(res = () => {\n        this.setState({ todos: [...this.state.todos, res.data] })\n        console.log(res.data);\n        })\n    //can't just simply change todos, we have to make a copy with ...\n    //this.setState({ todos: [...this.state.todos, newTodo]})\n  }\n  \n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path='/' render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo}/>\n                <Todos todos={this.state.todos} \n                      markComplete={this.markComplete}\n                      delTodo={this.delTodo}/>\n              </React.Fragment>\n            )}/>\n            <Route path=\"/about\" component={About}/>\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}